#!/usr/bin/env bash
set -e

HFCTL=v0.3.0
IMAGE=hyperf/hyperf:8.2-alpine-v3.18-swoole-v5.1
HFCID=/tmp/hfctl.cid

version() {
    echo -e "hfctl: \033[1;32m$HFCTL\033[0m"
    echo -e "image: \033[1;32m$IMAGE\033[0m"
}

help() {
    echo -e "\033[1;33mUsage:\033[0m"
    echo -e "   hfctl <command> [arguments]"
    echo -e ""
    echo -e "\033[1;33mCommands:\033[0m"
    echo -e "   \033[1;32mhelp\033[0m                           Shows this help message"
    echo -e "   \033[1;32mversion\033[0m                        Displays hfctl and image version"
    echo -e "   \033[1;32mself-update\033[0m                    Updates hfctl to the latest version"
    echo -e "   \033[1;32mcreate <project-name> [-it]\033[0m    Creates a new Hyperf project \033[1;37m(use -it for interactive mode)\033[0m"
    echo -e "   \033[1;32mcomposer <subcommand>\033[0m          Runs composer commands"
    echo -e "   \033[1;32mstart [port]\033[0m                   Starts the Hyperf server \033[1;37m(default port 9501)\033[0m"
    echo -e "   \033[1;32mstop\033[0m                           Stops the Hyperf server"
    echo -e "   \033[1;32mrestart\033[0m                        Restart the Hyperf server"
    echo -e "   \033[1;32mwatch [port]\033[0m                   Starts the Hyperf watcher \033[1;37m(default port 9501)\033[0m"
    echo -e "   \033[1;32mbin (cmd or command) <command>\033[0m Runs Hyperf commands"
    echo -e "   \033[1;32mlogs [-f|--follow]\033[0m             Shows the Hyperf container logs \033[1;37m(use -f or --follow to follow logs)\033[0m"
    echo -e ""
}

install() {
    HFCTL_DIR=$(dirname $(realpath $0))
    sudo ln -sf "${HFCTL_DIR}/hfctl" /usr/local/bin/hfctl
    sudo ln -sf "${HFCTL_DIR}/hfctl" /usr/local/bin/hf
    sudo ln -sf "${HFCTL_DIR}/hfctl" /usr/local/bin/hyperf
}

self-update() {
    HFCTL_DIR=$(dirname $(realpath $0))
    cd $HFCTL_DIR
    git pull origin main
}

create() {
    docker-run ${2:--i} composer create-project hyperf/hyperf-skeleton:dev-master $1
    sudo chown -R $UID:$UID $1
}

composer() {
    pre-check
    docker-run -it composer $@
}

start() {
    pre-check
    PORT=${1:-9501}
    if [ -n "$(docker ps --format 'table {{.Ports}}' | grep $PORT)" ]; then
        echo -e "\033[0;31mPort $PORT is already in use by another container\033[0m"
        exit 1
    fi

    echo $(docker-run -dp$PORT:9501 php bin/hyperf.php ${2:-start}) > $HFCID
    echo -e "\033[1;32mServer is running at $PORT\033[0m"
    echo -e "http://localhost:$PORT"
}

watch() {
    pre-check
    if [[ $(composer show hyperf/watcher) == *"\"hyperf/watcher\" not found"* ]]; then
        docker-run -t composer require --dev hyperf/watcher
    fi
    start ${1:-9501} server:watch
}

stop() {
    pre-check
    docker stop $(cat $HFCID) && rm $HFCID
}

restart() {
    pre-check
    docker restart $(cat $HFCID) && rm $HFCID
}

bin() {
    pre-check
    docker-run -it php bin/hyperf.php $@
}

logs() {
    pre-check
    docker logs $@ $(cat $HFCID)
}

docker-run() {
    docker run --rm -w /opt -v ./:/opt $1 --entrypoint $2 $IMAGE ${@:3}
}

pre-check() {
    if ! [ -f bin/hyperf.php ]; then
        echo -e "\033[0;31mAre you in a Hyperf project?\033[0m"
        exit 1
    fi
}

CMD=${1:-help}
ARGS=${@:2}
if [[ $CMD =~ command|cmd ]]; then CMD=bin; fi
$CMD $ARGS
